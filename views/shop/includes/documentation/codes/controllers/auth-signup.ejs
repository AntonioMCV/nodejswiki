  // Package to encrypt passwords
  const bcrypt = require('bcryptjs')
  // Package to send emails
  const nodemailer = require('nodemailer')
  // Package to send emails with SendGrid
  const sendgridTansport = require('nodemailer-sendgrid-transport')

  const { validationResult } = require('express-validator')

  const User = require('../models/user')
  const transporter = nodemailer.createTransport(sendgridTansport({
    auth: {
      api_key: process.env.SENDGRID_API_KEY
    },
    tls: {
      rejectUnauthorized: false
    }
  }))

  exports.getSignup = (req, res, next) => {
    res.render('shop/auth/signup', {
      pageTitle: 'Signup',
      path: '/signup',
      errorMessage: req.flash('error'),
      oldInput: {
        email: '',
        password: '',
        confirmPassword: ''
      },
      validationErrors: [],
      translates: global.lang.examples.store.signup
    })
  }

  exports.postSignup = (req, res, next) => {
    res.header('Accesss-Control-Allow-Origin', '*')
    const email = req.body.email
    const password = req.body.password
  
    const errors = validationResult(req)
    if (!errors.isEmpty()) {
      console.log(errors.array())
      return res.status(442).render('shop/auth/signup', {
        pageTitle: 'Signup',
        path: '/signup',
        errorMessage: errors.array()[0].msg,
        oldInput: {
          email: email,
          password: password,
          confirmPassword: req.body.confirmPassword
        },
        validationErrors: errors.array()
      })
    }
  
    bcrypt
      .hash(password, 12)
      .then((hashedPassword) => {
        const user = new User({
          email: email,
          password: hashedPassword,
          cart: {items: []}
        })
        return user.save()
      })
      .then((result) => {
        res.redirect('/' + global.lang.current + '/examples/store/auth/login')
        process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0 // fix 'UNABLE_TO_GET_ISSUER_CERT_LOCALLY' error to send email
        return transporter.sendMail({
          to: email,
          from: 'superpeska@gmail.com',
          subject: 'Welcome to Shop Node.js Wiki',
          html: '<h1>Welcome to Shop Node.js Wiki!</h1>'
        })
      })
      .catch((err) => {
        const error = new Error(err)
        error.httpStatusCode = 500
        return next(error)
      })
  }